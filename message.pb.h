// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto;
class Data3d;
struct Data3dDefaultTypeInternal;
extern Data3dDefaultTypeInternal _Data3d_default_instance_;
class GeneratedPosition;
struct GeneratedPositionDefaultTypeInternal;
extern GeneratedPositionDefaultTypeInternal _GeneratedPosition_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Data3d* Arena::CreateMaybeMessage<::Data3d>(Arena*);
template<> ::GeneratedPosition* Arena::CreateMaybeMessage<::GeneratedPosition>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Data3d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Data3d) */ {
 public:
  inline Data3d() : Data3d(nullptr) {}
  ~Data3d() override;
  explicit PROTOBUF_CONSTEXPR Data3d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Data3d(const Data3d& from);
  Data3d(Data3d&& from) noexcept
    : Data3d() {
    *this = ::std::move(from);
  }

  inline Data3d& operator=(const Data3d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data3d& operator=(Data3d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Data3d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Data3d* internal_default_instance() {
    return reinterpret_cast<const Data3d*>(
               &_Data3d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Data3d& a, Data3d& b) {
    a.Swap(&b);
  }
  inline void Swap(Data3d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Data3d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Data3d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Data3d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Data3d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Data3d& from) {
    Data3d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data3d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Data3d";
  }
  protected:
  explicit Data3d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // required float x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // required float y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // required float z = 3;
  bool has_z() const;
  private:
  bool _internal_has_z() const;
  public:
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:Data3d)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GeneratedPosition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GeneratedPosition) */ {
 public:
  inline GeneratedPosition() : GeneratedPosition(nullptr) {}
  ~GeneratedPosition() override;
  explicit PROTOBUF_CONSTEXPR GeneratedPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GeneratedPosition(const GeneratedPosition& from);
  GeneratedPosition(GeneratedPosition&& from) noexcept
    : GeneratedPosition() {
    *this = ::std::move(from);
  }

  inline GeneratedPosition& operator=(const GeneratedPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratedPosition& operator=(GeneratedPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratedPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratedPosition* internal_default_instance() {
    return reinterpret_cast<const GeneratedPosition*>(
               &_GeneratedPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GeneratedPosition& a, GeneratedPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(GeneratedPosition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratedPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratedPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeneratedPosition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GeneratedPosition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GeneratedPosition& from) {
    GeneratedPosition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneratedPosition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GeneratedPosition";
  }
  protected:
  explicit GeneratedPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 3,
    kSensorIdFieldNumber = 1,
    kTimestampUsecFieldNumber = 2,
  };
  // required .Data3d position = 3;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::Data3d& position() const;
  PROTOBUF_NODISCARD ::Data3d* release_position();
  ::Data3d* mutable_position();
  void set_allocated_position(::Data3d* position);
  private:
  const ::Data3d& _internal_position() const;
  ::Data3d* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::Data3d* position);
  ::Data3d* unsafe_arena_release_position();

  // required uint64 sensorId = 1;
  bool has_sensorid() const;
  private:
  bool _internal_has_sensorid() const;
  public:
  void clear_sensorid();
  uint64_t sensorid() const;
  void set_sensorid(uint64_t value);
  private:
  uint64_t _internal_sensorid() const;
  void _internal_set_sensorid(uint64_t value);
  public:

  // required uint64 timestamp_usec = 2;
  bool has_timestamp_usec() const;
  private:
  bool _internal_has_timestamp_usec() const;
  public:
  void clear_timestamp_usec();
  uint64_t timestamp_usec() const;
  void set_timestamp_usec(uint64_t value);
  private:
  uint64_t _internal_timestamp_usec() const;
  void _internal_set_timestamp_usec(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:GeneratedPosition)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::Data3d* position_;
    uint64_t sensorid_;
    uint64_t timestamp_usec_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Data3d

// required float x = 1;
inline bool Data3d::_internal_has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Data3d::has_x() const {
  return _internal_has_x();
}
inline void Data3d::clear_x() {
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Data3d::_internal_x() const {
  return _impl_.x_;
}
inline float Data3d::x() const {
  // @@protoc_insertion_point(field_get:Data3d.x)
  return _internal_x();
}
inline void Data3d::_internal_set_x(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_ = value;
}
inline void Data3d::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Data3d.x)
}

// required float y = 2;
inline bool Data3d::_internal_has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Data3d::has_y() const {
  return _internal_has_y();
}
inline void Data3d::clear_y() {
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Data3d::_internal_y() const {
  return _impl_.y_;
}
inline float Data3d::y() const {
  // @@protoc_insertion_point(field_get:Data3d.y)
  return _internal_y();
}
inline void Data3d::_internal_set_y(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.y_ = value;
}
inline void Data3d::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Data3d.y)
}

// required float z = 3;
inline bool Data3d::_internal_has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Data3d::has_z() const {
  return _internal_has_z();
}
inline void Data3d::clear_z() {
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Data3d::_internal_z() const {
  return _impl_.z_;
}
inline float Data3d::z() const {
  // @@protoc_insertion_point(field_get:Data3d.z)
  return _internal_z();
}
inline void Data3d::_internal_set_z(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.z_ = value;
}
inline void Data3d::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Data3d.z)
}

// -------------------------------------------------------------------

// GeneratedPosition

// required uint64 sensorId = 1;
inline bool GeneratedPosition::_internal_has_sensorid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GeneratedPosition::has_sensorid() const {
  return _internal_has_sensorid();
}
inline void GeneratedPosition::clear_sensorid() {
  _impl_.sensorid_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t GeneratedPosition::_internal_sensorid() const {
  return _impl_.sensorid_;
}
inline uint64_t GeneratedPosition::sensorid() const {
  // @@protoc_insertion_point(field_get:GeneratedPosition.sensorId)
  return _internal_sensorid();
}
inline void GeneratedPosition::_internal_set_sensorid(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sensorid_ = value;
}
inline void GeneratedPosition::set_sensorid(uint64_t value) {
  _internal_set_sensorid(value);
  // @@protoc_insertion_point(field_set:GeneratedPosition.sensorId)
}

// required uint64 timestamp_usec = 2;
inline bool GeneratedPosition::_internal_has_timestamp_usec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GeneratedPosition::has_timestamp_usec() const {
  return _internal_has_timestamp_usec();
}
inline void GeneratedPosition::clear_timestamp_usec() {
  _impl_.timestamp_usec_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t GeneratedPosition::_internal_timestamp_usec() const {
  return _impl_.timestamp_usec_;
}
inline uint64_t GeneratedPosition::timestamp_usec() const {
  // @@protoc_insertion_point(field_get:GeneratedPosition.timestamp_usec)
  return _internal_timestamp_usec();
}
inline void GeneratedPosition::_internal_set_timestamp_usec(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timestamp_usec_ = value;
}
inline void GeneratedPosition::set_timestamp_usec(uint64_t value) {
  _internal_set_timestamp_usec(value);
  // @@protoc_insertion_point(field_set:GeneratedPosition.timestamp_usec)
}

// required .Data3d position = 3;
inline bool GeneratedPosition::_internal_has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline bool GeneratedPosition::has_position() const {
  return _internal_has_position();
}
inline void GeneratedPosition::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Data3d& GeneratedPosition::_internal_position() const {
  const ::Data3d* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::Data3d&>(
      ::_Data3d_default_instance_);
}
inline const ::Data3d& GeneratedPosition::position() const {
  // @@protoc_insertion_point(field_get:GeneratedPosition.position)
  return _internal_position();
}
inline void GeneratedPosition::unsafe_arena_set_allocated_position(
    ::Data3d* position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = position;
  if (position) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GeneratedPosition.position)
}
inline ::Data3d* GeneratedPosition::release_position() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Data3d* temp = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Data3d* GeneratedPosition::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:GeneratedPosition.position)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Data3d* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::Data3d* GeneratedPosition::_internal_mutable_position() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.position_ == nullptr) {
    auto* p = CreateMaybeMessage<::Data3d>(GetArenaForAllocation());
    _impl_.position_ = p;
  }
  return _impl_.position_;
}
inline ::Data3d* GeneratedPosition::mutable_position() {
  ::Data3d* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:GeneratedPosition.position)
  return _msg;
}
inline void GeneratedPosition::set_allocated_position(::Data3d* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.position_ = position;
  // @@protoc_insertion_point(field_set_allocated:GeneratedPosition.position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_2eproto
